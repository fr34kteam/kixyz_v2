{%- liquid
  if collection.url.size == 0
    assign collection_url = routes.all_products_collection_url
  else
    assign collection_url = collection.url
  endif

  if collection_url contains "?"
    assign collection_url = collection_url | split: "?" | first
  endif

  assign current_sort_by = collection.sort_by | default: collection.default_sort_by
-%}

<div data-section-type="collection-template"
     data-collection-url="{{ collection_url }}"
     data-ajax-filtering="{{ section.settings.ajax_products }}"
     data-components="tabs,product-block,price-range,accordion"
     class="pb-medium {% if section.settings.show_collection_image and collection.featured_image %}header-overlap-section{% elsif section.settings.show_collection_content %}pt-medium{% else %}sm:pt-medium{% endif %}" data-cc-animate>

  {% paginate collection.products by section.settings.products_per_page %}
    {% if section.settings.show_collection_image and collection.featured_image %}
      <div class="collection-header image-overlay image-overlay--bg-full needs-alt-logo">
        <div class="rimage-outer-wrapper rimage-background lazyload fade-in"
             data-cc-animate="cc-fade-in-zoom-out"
             data-bgset="{% render 'bgset', image: collection.featured_image %}"
             data-sizes="auto"
             data-parent-fit="cover">
          <noscript>
            <div class="rimage-wrapper" style="padding-top:{{ 1 | divided_by: collection.featured_image.aspect_ratio | times: 100 }}%">
              <img src="{{ collection.featured_image | img_url: '1024x1024' }}" alt="{{ collection.featured_image.alt | escape }}" class="rimage__image">
            </div>
          </noscript>
        </div>

        <div class="overlay-type overlay" data-cc-animate="cc-fade-in-zoom-out">
          <div class="overlay__content">
    {% endif %}

      <div class="central">
        <div class="content transparent">
          {% if section.settings.show_collection_content %}
            {% if collection.description != blank %}
              <h1 class="line-1 feature-header" data-cc-animate>{{ collection.title }}</h1>

              {% if section.settings.description_position == "top" %}
                <div class="line-2 rte" data-cc-animate data-cc-animate-delay="0.2s">
                  {{ collection.description }}
                </div>
              {% endif %}
            {% else %}
              <h1 class="line-1 feature-header no-margin" data-cc-animate>{{ collection.title }}</h1>
            {% endif %}
          {% endif %}
        </div>
      </div>

    {% if section.settings.show_collection_image and collection.featured_image %}
          </div>
        </div>
      </div>
    {% endif %}

    {% if section.settings.filter_mode == "simple" or section.settings.filter_mode == "none" %}
      <div class="wide-container filter{% if section.settings.show_collection_image == false and section.settings.show_collection_content == false %} mt-0{% endif %}"
           data-cc-animate data-cc-animate-delay="0.7s">
        <form id="CollectionFilterForm" data-ajax-container>
          {%- comment -%}
            Preserve automatic vendor/type collections & sorting
          {%- endcomment -%}
          {%- if collection.current_vendor or collection.current_type -%}
            <input type="hidden" name="q" value="{{ collection.current_vendor }}{{ collection.current_type }}">
          {%- endif -%}

          {%- if section.settings.enable_sorting == false -%}
            <input type="hidden" name="sort_by" value="{{ current_sort }}">
          {%- endif -%}

          {% if section.settings.filter_mode == "simple" %}
            {%- for filter in collection.filters -%}
              {%- case filter.type -%}
                {%- when "list" -%}
                  <div class="option">
                    <label for="filter-by-{{ filter.label | handle }}">{{ filter.label }}</label>
                    <select id="filter-by-{{ filter.label | handle }}" name="{{ filter.values.first.param_name }}">
                      <option value="">{{ 'collections.filtering.all' | t }}</option>
                      {%- for value in filter.values -%}
                        <option value="{{ value.value | escape }}" {% if value.active %}selected{% endif %} {% if value.count == 0 and value.active == false %}disabled{% endif %}>
                          {{ value.label }}{% if section.settings.show_filter_counts %} ({{ value.count }}){% endif %}
                        </option>
                      {%- endfor -%}
                    </select>
                  </div>
                {%- when "price_range" -%}
                  {% comment %}{% render 'price-range', filter: filter %}{% endcomment %}

              {%- endcase -%}
            {%- endfor -%}
          {% endif %}

          {%- if section.settings.enable_sorting -%}
            <div class="option">
              <label for="filter-by-sort-by">{{ 'collections.sorting.title' | t }}</label>
              <select id="filter-by-sort-by" name="sort_by">
                {%- for option in collection.sort_options -%}
                  {%- if option.value == "manual" and section.settings.show_featured_in_sort -%}
                    <option value="{{ option.value | escape }}"{% if option.value == sort_by or option.value == current_sort_by %} selected="selected"{% endif %}>
                      {{ option.name | escape }}
                    </option>
                  {%- elsif option.value != "manual" -%}
                    <option value="{{ option.value | escape }}"{% if option.value == sort_by or option.value == current_sort_by %} selected="selected"{% endif %}>
                      {{ option.name | escape }}
                    </option>
                  {%- endif -%}
                {%- endfor -%}
              </select>
            </div>
          {% endif %}

          <noscript>
            <button type="submit" class="btn">{{ 'collections.filtering.submit' | t }}</button>
          </noscript>
        </form>
      </div>
    {% endif %}

    <div data-cc-animate data-cc-animate-delay="0.7s">
      <div class="wide-container half-gutter cc-product-filter-container
        {% if section.settings.filter_mode == "simple" or section.settings.filter_mode == "none" %}pt-0{% endif %}
        {% if section.settings.show_collection_image == false and section.settings.show_collection_content == false %}pt-0{% endif %}" data-ajax-container data-ajax-scroll-to>

        {% if section.settings.filter_mode == "sidebar" %}
          <div class="footer-button-xs">
            <button class="button no-hover" data-show-collection-filter
              data-close-text="{{ 'collections.filtering.mobile_close' | t }}"
              data-open-text="{{ 'collections.filtering.mobile_reveal' | t }}"
              data-result-count-text="{{ 'collections.filtering.show_results' | t }}"
              data-result-count-text-singular="{{ 'collections.filtering.show_results_singular' | t }}">
              {{ 'collections.filtering.mobile_reveal' | t }}
            </button>
          </div>

          <div class="cc-product-filter cc-product-filter--sticky-{{ section.settings.sticky_sidebar }}">
            <form id="CollectionFilterForm">
              {%- comment -%}
                Preserve automatic vendor/type collections & sorting
              {%- endcomment -%}
              {%- if collection.current_vendor or collection.current_type -%}
                <input type="hidden" name="q" value="{{ collection.current_vendor }}{{ collection.current_type }}">
              {%- endif -%}

              {%- if section.settings.enable_sorting == false -%}
                <input type="hidden" name="sort_by" value="{{ current_sort }}">
              {%- endif -%}

              {%- for filter in collection.filters -%}
                {%- liquid
                  if settings.swatch_enabled and settings.swatch_option_name == filter.label and filter.type == "list"
                    assign filter_group_is_swatch = true
                  else
                    assign filter_group_is_swatch = false
                  endif

                  if section.settings.collapse_filters_method == 'all'
                    assign filter_is_open = false
                  elsif section.settings.collapse_filters_method == 'none'
                    assign filter_is_open = true
                  elsif section.settings.collapse_filters_method contains 'over-'
                    assign limit = section.settings.collapse_filters_method | split: '-' | last | plus: 0
                    if filter.values.size > limit
                      assign filter_is_open = false
                    else
                      assign filter_is_open = true
                    endif
                  endif

                  assign filter_title = filter.label | escape
                -%}

                {%- capture filter_content -%}
                  {%- case filter.type -%}
                    {%- when "list" -%}
                      {%- if filter_group_is_swatch -%}
                        <ul class="cc-swatches">
                          {%- for value in filter.values -%}
                            <li data-tag="{{ value.label | handle }}">
                              <label class="cc-checkbox{% if value.active %} active{% endif %}{% if value.count == 0 and value.active == false %} disabled{% endif %}"
                                     title="{{ value.label | escape }}">
                                <input class="cc-checkbox__input"
                                       id="Filter-{{ value.param_name }}-{{ value.value | handle }}"
                                       type="checkbox"
                                       name="{{ value.param_name }}"
                                       value="{{ value.value | escape }}"
                                       {% if value.active %}checked{% endif %}
                                  {% if value.count == 0 and value.active == false %}disabled{% endif %}>
                              </label>
                              {% if settings.swatch_method == "image" %}
                                {% style %}
                                  .cc-swatches [data-tag="{{ value.label | handle }}"] .cc-checkbox::before {
                                    background-image: url({{ value.label | handle | append: '.png' | file_img_url: '48x48', crop: 'center' }});
                                  }
                                {% endstyle %}
                              {% endif %}
                            </li>
                          {%- endfor -%}
                        </ul>
                      {%- else -%}
                        {%- for value in filter.values -%}
                          <label class="cc-checkbox">
                            <input class="cc-checkbox__input"
                                   id="Filter-{{ value.param_name }}-{{ value.value | handle }}"
                                   type="checkbox"
                                   name="{{ value.param_name }}"
                                   value="{{ value.value | escape }}"
                                   {% if value.active %}checked{% endif %}
                              {% if value.count == 0 and value.active == false %}disabled{% endif %}>

                            <span class="cc-checkbox__label">{{ value.label | escape }}</span>

                            {% if section.settings.show_filter_counts %}
                              <span class="cc-checkbox__count">{{ value.count }}</span>
                            {% endif %}
                          </label>
                        {%- endfor -%}
                      {%- endif -%}

                    {%- when "price_range" -%}
                      {% render 'price-range', filter: filter %}

                  {%- endcase -%}
                {%- endcapture -%}

                {%- render "accordion", first_item_open: filter_is_open, item1_title: filter_title, item1_content: filter_content -%}
              {%- endfor -%}

              {%- if section.settings.enable_sorting -%}
                {%- liquid
                  assign filter_title = 'collections.sorting.title' | t

                  if section.settings.collapse_sort_by == true
                    assign filter_is_open = false
                  else
                    assign filter_is_open = true
                  endif
                -%}

                {%- capture filter_content -%}
                  <ul class="cc-product-filter__sort-by">
                    {%- for option in collection.sort_options -%}
                      {%- if option.value == "manual" and section.settings.show_featured_in_sort -%}
                        <label class="cc-checkbox sort-{{ option.name | handle }}">
                          <input class="cc-checkbox__input"
                                 type="radio"
                                 name="sort_by"
                                 value="{{ option.value | escape }}"
                                 {% if option.value == current_sort_by %}checked{% endif %}
                          >
                          <span class="cc-checkbox__label">{{ option.name | escape }}</span>
                        </label>
                      {%- elsif option.value != "manual" -%}
                        <label class="cc-checkbox sort-{{ option.name | handle }}">
                          <input class="cc-checkbox__input"
                                 type="radio"
                                 name="sort_by"
                                 value="{{ option.value | escape }}"
                                 {% if option.value == current_sort_by %}checked{% endif %}
                          >
                          <span class="cc-checkbox__label">{{ option.name | escape }}</span>
                        </label>
                      {%- endif -%}
                    {%- endfor -%}
                  </ul>
                {%- endcapture -%}

                {%- render "accordion", first_item_open: filter_is_open, item1_title: filter_title, item1_content: filter_content -%}
              {% endif %}

              <noscript>
                <button type="submit" class="btn">{{ 'collections.filtering.submit' | t }}</button>
              </noscript>
            </form>
          </div>
        {% endif %}

        <div class="product-list-container{% if section.settings.filter_mode == "sidebar" %} product-list-container--with-sidebar{% endif %}" data-infinite-scroll-container>

          {% capture active_filters_html %}
            <div class="active-filter-controls-container">
              <ul class="active-filter-controls">
                <li class="active-filter-controls__clear-left">
                  <a href="{{ collection.url }}" class="active-filter-controls__clear">
                    {{ 'collections.filtering.clear_all' | t }}
                  </a>
                </li>

                {%- for filter in collection.filters -%}
                  {%- for value in filter.active_values -%}
                    <li>
                      <a href="{{ value.url_to_remove }}" class="active-filter-controls__tag" data-active-tag="{{ value | escape }}">
                        {{ value.label | escape }}
                      </a>
                    </li>
                  {%- endfor -%}

                  {% if filter.type == "price_range" %}
                    {%- if filter.min_value.value != nil or filter.max_value.value != nil -%}
                      <li>
                        <a href="{{ filter.url_to_remove }}" class="active-filter-controls__tag" data-active-tag="{{ filter | escape }}">
                          {%-if filter.min_value.value %}{{ filter.min_value.value | money }}{%- else -%}{{ 0 | money }}{%- endif -%}-{%- if filter.max_value.value -%}{{ filter.max_value.value | money }}{%- else -%}{{ filter.range_max | money }}{% endif %}
                        </a>
                      </li>
                    {%- endif -%}
                  {% endif %}
                {%- endfor -%}

                <li class="active-filter-controls__clear-right">
                  <a href="{{ collection.url }}" class="active-filter-controls__clear">
                    {{ 'collections.filtering.clear_all' | t }}
                  </a>
                </li>
              </ul>
            </div>
          {% endcapture %}
          {%- if active_filters_html contains 'active-filter-controls__tag' -%}
            {{ active_filters_html }}
          {%- endif -%}

          <div class="product-list cf
            product-list--{{ section.settings.layout }}
            {% if section.settings.grid_mobile == '2' %}mob-two-col{% endif %}
            {% if section.settings.layout == 'columns' %}jiggly-split dynamic-col-{{ section.settings.grid }}{% else %}grid--uniform{% endif %}"
          data-result-count="{{ collection.products_count }}"
          data-infinite-scroll-results>

            {% unless collection.products.size > 0 %}
              <h3 class="align-centre no-results">{{ 'collections.general.no_matches' | t }}</h3>
            {% endunless %}

            {% if section.settings.layout == 'rows' %}
              {% if section.settings.grid == 2 %}
                {% assign product_class = 'column half' %}
              {% elsif section.settings.grid == 3 %}
                {% assign product_class = 'column third' %}
              {% else %}
                {% assign product_class = 'column quarter' %}
              {% endif %}
            {% endif %}

            {% for product in collection.products %}
              {% render 'product-block', product: product, product_class: product_class, i: forloop.index, show_vendor: section.settings.show_vendor %}
            {% endfor %}
          </div>

          {% comment %}
            Infinite scroll option:

            By default, more products will load in once you scroll to the bottom of the page.

            Change 'false' to 'true' on the line below to prevent this from happening, and instead show a button at the bottom of the page.
            Clicking this button will load in the next batch of products.
          {% endcomment %}

          {% assign show_scroll_button = false %}
          {% if paginate.pages > 1 %}
            <div class="pagination central small-gap-top content {% if section.settings.enable_infinite_scroll %}infiniscroll{% if show_scroll_button %} wait-for-trigger{% endif %}{% endif %}  transparent">
              {{ paginate | default_pagination }}
            </div>
          {% endif %}
        </div>
      </div>

      {% if collection.description != blank and section.settings.description_position == "bottom" and section.settings.show_collection_content == true %}
        <div class="central footer">
          <div class="content transparent">
            <div class="rte">
              {{ collection.description }}
            </div>
          </div>
        </div>
      {% endif %}
    </div>
  {% endpaginate %}
</div>


{% schema %}
  {
    "name": "Collection pages",
    "settings": [
      {
        "type": "header",
        "content": "Header"
      },
      {
        "type": "checkbox",
        "id": "show_collection_content",
        "label": "Show collection title/description",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "show_collection_image",
        "label": "Show collection image",
        "default": true
      },
      {
        "type": "select",
        "id": "description_position",
        "label": "Description position",
        "options": [
          {
            "value": "top",
            "label": "Top"
          },
          {
            "value": "bottom",
            "label": "Bottom"
          }
        ]
      },
      {
        "type": "header",
        "content": "GRID"
      },
      {
        "type": "select",
        "id": "layout",
        "label": "Layout",
        "options": [
          {
            "value": "columns",
            "label": "Collage"
          },
          {
            "value": "rows",
            "label": "Grid"
          }
        ],
        "default": "rows",
        "info": "Collage will only work when the 'Image shape' is set to Natural - in Products / Image shape"
      },
      {
        "type": "checkbox",
        "id": "show_vendor",
        "label": "Show product vendor",
        "default": false
      },
      {
        "type": "range",
        "id": "grid",
        "label": "Desktop products per row",
        "min": 2,
        "max": 4,
        "default": 3
      },
      {
        "type": "select",
        "id": "grid_mobile",
        "label": "Mobile products per row",
        "options": [
          {
            "value": "1",
            "label": "1"
          },
          {
            "value": "2",
            "label": "2"
          }
        ],
        "default": "2"
      },
      {
        "type": "range",
        "id": "products_per_page",
        "label": "Products per page",
        "min": 12,
        "max": 48,
        "step": 6,
        "default": 18
      },
      {
        "type": "checkbox",
        "id": "enable_infinite_scroll",
        "label": "Enable infinite-scroll",
        "default": true,
        "info": "As visitors scroll down, more products are loaded in automatically."
      },
      {
        "type": "header",
        "content": "FILTERS"
      },
      {
        "type": "paragraph",
        "content": "To create the collection filters, go to your [navigation](\/admin\/menus) page."
      },
      {
        "type": "checkbox",
        "id": "show_filter_counts",
        "label": "Show filter counts",
        "default": false
      },
      {
        "type": "checkbox",
        "id": "ajax_products",
        "label": "Filter and sort collections without reloading the page",
        "default": true,
        "info": "Some apps require this to be disabled"
      },
      {
        "type": "radio",
        "id": "filter_mode",
        "label": "Filter mode",
        "default": "sidebar",
        "options": [
          {
            "value": "none",
            "label": "None"
          },
          {
            "value": "simple",
            "label": "Simple"
          },
          {
            "value": "sidebar",
            "label": "Sidebar"
          }
        ],
        "info": "'Simple' is only recommended if you have a small number of filters. Note, it doesn't allow for multiple options within a filter to be selected and it won't show the price range filter."
      },
      {
        "type": "header",
        "content": "Sidebar Settings"
      },
      {
        "type": "checkbox",
        "id": "sticky_sidebar",
        "label": "Stick the sidebar on scroll",
        "default": true
      },
      {
        "type": "select",
        "id": "collapse_filters_method",
        "label": "Filter group collapse",
        "default": "none",
        "options": [
          {
            "value": "none",
            "label": "None"
          },
          {
            "value": "over-6",
            "label": "Over 6 items"
          },
          {
            "value": "over-12",
            "label": "Over 12 items"
          },
          {
            "value": "over-18",
            "label": "Over 18 items"
          },
          {
            "value": "all",
            "label": "All"
          }
        ]
      },
      {
        "type": "checkbox",
        "id": "collapse_sort_by",
        "label": "Collapse 'Sort by' filter group",
        "default": false
      },
      {
        "type": "header",
        "content": "Sorting"
      },
      {
        "type": "checkbox",
        "id": "enable_sorting",
        "label": "Enable sorting",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "show_featured_in_sort",
        "label": "Show 'Featured' option in sorting dropdown",
        "default": false
      }
    ]
  }
{% endschema %}
